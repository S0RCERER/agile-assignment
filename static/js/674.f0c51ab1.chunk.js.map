{"version":3,"file":"static/js/674.f0c51ab1.chunk.js","mappings":"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","sources":["api/tmdb-api.js","components/customPagination/index.js","components/spinner/index.js","components/headerMovieList/index.js","components/filterMoviesCard/index.js","components/movieCard/index.js","components/movieList/index.js","components/templateMovieListPage/index.js","components/cardIcons/addToPlaylist.js","pages/upcomingMoviesPage.js","../node_modules/@mui/icons-material/PlaylistAdd.js"],"sourcesContent":["export const getMovies = ({queryKey}) => {\r\n  const [, pageNum] = queryKey;\r\n  const { page } = pageNum;\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n     throw error\r\n  });\r\n};\r\n  \r\n  export const getPopularPeople = () => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/person/popular?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  \r\n  export const getPerson = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  };\r\n\r\n  export const getPersonImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/person/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getUpcomingMovies = ({ queryKey }) => {\r\n    const [, pageNum] = queryKey;\r\n    const { page } = pageNum;\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=${page}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n       throw error\r\n    });\r\n  };\r\n\r\n  export const getMovie = (args) => {\r\n    // console.log(args)\r\n    const [, idPart] = args.queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  };\r\n\r\n export const getTopRatedMovies = ({ queryKey }) => {\r\n  const [, pageNum] = queryKey;\r\n  const { page } = pageNum;\r\n  return fetch(\r\n    `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw new Error(response.json().message);\r\n    }\r\n    return response.json();\r\n  })\r\n  .catch((error) => {\r\n     throw error\r\n  });\r\n};\r\n  \r\n  export const getGenres = async () => {\r\n    return fetch(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" +\r\n        process.env.REACT_APP_TMDB_KEY +\r\n        \"&language=en-US\"\r\n    ).then( (response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  };\r\n  \r\n  export const getMovieImages = ({ queryKey }) => {\r\n    const [, idPart] = queryKey;\r\n    const { id } = idPart;\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    ).then( (response) => {\r\n      if (!response.ok) {\r\n        throw new Error(response.json().message);\r\n      }\r\n      return response.json();\r\n  \r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n   });\r\n  };\r\n\r\n  export const getMovieReviews = (id) => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        // console.log(json.results);\r\n        return json.results;\r\n      });\r\n  };\r\n\r\n","import React from \"react\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\n\r\nconst CustomPagination = ({page, setPage}) => {\r\n  function handleChange(_e, p) {\r\n        setPage(p);\r\n    }\r\n\r\n  return(\r\n      <div style={{\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        zIndex: 200,\r\n        background: \"white\",\r\n        padding: \"10px 80px\",\r\n        width: \"100%\",\r\n      }}>\r\n        <Pagination \r\n        showFirstButton showLastButton \r\n        page={page}\r\n        onChange={handleChange}\r\n        count={30}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        />\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default CustomPagination","import React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport default function CircularIndeterminate() {\r\n  return (\r\n    <div sx={{\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        '& > * + *': {\r\n          marginLeft: '2em',\r\n        }}}>\r\n      <CircularProgress />\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Header = (props ) => {\r\n  const title = props.title\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Paper \r\n      component=\"div\" \r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        flexWrap: \"wrap\",\r\n        marginBottom: 1.5,\r\n      }}\r\n      >\r\n      <IconButton aria-label=\"go back\" onClick={() => navigate(-1)}>\r\n        <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography variant=\"h4\" component=\"h3\">\r\n        {title}\r\n      </Typography>\r\n      <IconButton aria-label=\"go forward\" onClick={() => navigate(+1)}>\r\n        <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Header;","import Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport img from '../../images/pexels-dziana-hasanbekava-5480827.jpg'\r\nimport { getGenres } from \"../../api/tmdb-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\n\r\nconst formControl = \r\n  {\r\n    margin: 1,\r\n    minWidth: 220,\r\n    backgroundColor: \"rgb(255, 255, 255)\"\r\n  };\r\n\r\nexport default function FilterMoviesCard(props) {\r\n\r\n  const { data, error, isLoading, isError } = useQuery(\"genres\", getGenres);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n  const genres = data.genres;\r\n  if (genres[0].name !== \"All\"){\r\n    genres.unshift({ id: \"0\", name: \"All\" });\r\n  }\r\n\r\n  const handleChange = (e, type, value) => {\r\n    e.preventDefault();\r\n    props.onUserInput(type, value); // NEW\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    handleChange(e, \"name\", e.target.value);\r\n  };\r\n\r\n  const handleGenreChange = (e) => {\r\n    handleChange(e, \"genre\", e.target.value);\r\n  };\r\n\r\n  const handleLanguageChange = (e) => {\r\n    handleChange(e, \"language\", e.target.value);\r\n  }\r\n\r\n  return (\r\n    <Card \r\n      sx={{\r\n        maxWidth: 345,\r\n        backgroundColor: \"rgb(25, 118, 210)\"\r\n      }} \r\n      variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n        </Typography>\r\n        <TextField\r\n          sx={{...formControl}}\r\n          id=\"filled-search\"\r\n          label=\"Search field\"\r\n          type=\"search\"\r\n          variant=\"filled\"\r\n          value={props.titleFilter}\r\n          onChange={handleTextChange}\r\n        />\r\n        <FormControl sx={{...formControl}}>\r\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\r\n          <Select\r\n            labelId=\"genre-label\"\r\n            id=\"genre-select\"\r\n            defaultValue=\"\"\r\n            value={props.genreFilter}\r\n            onChange={handleGenreChange}\r\n          >\r\n            {genres.map((genre) => {\r\n              return (\r\n                <MenuItem key={genre.id} value={genre.id}>\r\n                  {genre.name}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl sx={{...formControl}}>\r\n          <InputLabel id=\"genre-label\">Language</InputLabel>\r\n          <Select\r\n            labelId=\"language-label\"\r\n            id=\"language-select\"\r\n            defaultValue=\"\"\r\n            value={props.languageFilter}\r\n            onChange={handleLanguageChange}\r\n          >\r\n            {props.languages.map((language) => {\r\n              return (\r\n                <MenuItem key={language} value={language}>\r\n                  {language}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n      </CardContent>\r\n      <CardMedia\r\n        sx={{ height: 300 }}\r\n        image={img}\r\n        title=\"Filter\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport PlaylistAddCheckIcon from '@mui/icons-material/PlaylistAddCheck';\r\nimport CalendarIcon from \"@mui/icons-material/CalendarTodayTwoTone\";\r\nimport StarRateIcon from \"@mui/icons-material/StarRate\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport img from '../../images/film-poster-placeholder.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport React, { useContext  } from \"react\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\n\r\nexport default function MovieCard({ movie, action }) {\r\n  const { favorites } = useContext(MoviesContext);\r\n  const { playlist } = useContext(MoviesContext);\r\n       \r\n  if (favorites.find((id) => id === movie.id)) {\r\n    movie.favorite = true;\r\n  } else {\r\n    movie.favorite = false\r\n  }\r\n\r\n  if (playlist.find((id) => id === movie.id)) {\r\n    movie.playlist = true;\r\n  } else {\r\n    movie.playlist = false\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      <CardHeader\r\n        avatar={\r\n          movie.favorite ? (\r\n            <Avatar sx={{ backgroundColor: 'red' }}>\r\n              <FavoriteIcon />\r\n            </Avatar>\r\n          ) : null\r\n        \r\n        }\r\n        \r\n        avatar1={\r\n          movie.playlist ? (\r\n            <Avatar sx={{ backgroundColor: 'red' }}>\r\n              <PlaylistAddCheckIcon />\r\n            </Avatar>\r\n          ) : null\r\n        \r\n        }\r\n\r\n        title={\r\n          <Typography variant=\"h5\" component=\"p\">\r\n            {movie.title}{\" \"}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardMedia\r\n        sx={{ height: 500 }}\r\n        image={\r\n          movie.poster_path\r\n            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n            : img\r\n        }\r\n      />\r\n      <CardContent>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <CalendarIcon fontSize=\"small\" />\r\n              {movie.release_date}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" component=\"p\">\r\n              <StarRateIcon fontSize=\"small\" />\r\n              {\"  \"} {movie.vote_average}{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        {action(movie)}\r\n        <Link to={`/movies/${movie.id}`}>\r\n          <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\r\n            More Info ...\r\n          </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport Movie from \"../movieCard\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst MovieList = ( {movies, action }) => {\r\n  let movieCards = movies.map((m) => (\r\n    <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n      <Movie key={m.id} movie={m} action={action} />\r\n    </Grid>\r\n  ));\r\n  return movieCards;\r\n};\r\n\r\nexport default MovieList;","import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport FilterCard from \"../filterMoviesCard\";\r\nimport MovieList from \"../movieList\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction MovieListPageTemplate({ movies, title, action }) {\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const [languageFilter, setLanguageFilter] = useState(\"All\");\r\n  const genreId = Number(genreFilter);\r\n  const languages = [\"All\"];\r\n  // eslint-disable-next-line array-callback-return\r\n  movies.map((l) => {\r\n    if(!languages.includes(l.original_language)){\r\n      languages.push(l.original_language)\r\n    }\r\n  })\r\n\r\n\r\n  let displayedMovies = movies\r\n    .filter((m) => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    })\r\n    .filter((m) => {\r\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\r\n    })\r\n    .filter((m) => {\r\n      return languageFilter === \"All\" ? true : m.original_language === languageFilter;\r\n    })\r\n\r\n  const handleChange = (type, value) => {\r\n    if (type === \"name\") setNameFilter(value);\r\n    else if (type === \"language\") setLanguageFilter(value);\r\n    else setGenreFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container sx={{ padding: '20px' }}>\r\n      <Grid item xs={12}>\r\n        <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5}>\r\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n          <FilterCard\r\n            onUserInput={handleChange}\r\n            titleFilter={nameFilter}\r\n            genreFilter={genreFilter}\r\n            languageFilter={languageFilter}\r\n            languages={languages}\r\n          />\r\n        </Grid>\r\n        <MovieList action={action} movies={displayedMovies}></MovieList>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default MovieListPageTemplate;","import React, { useContext } from \"react\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\r\n\r\nconst AddToPlaylistIcon = ({ movie }) => {\r\n  const context = useContext(MoviesContext);\r\n\r\n  const handleAddToPlaylist = (e) => {\r\n    e.preventDefault();\r\n    context.addToPlaylist(movie);\r\n  };\r\n\r\n  return (\r\n    <IconButton aria-label=\"add to playlist\" onClick={handleAddToPlaylist}>\r\n      <PlaylistAddIcon color=\"primary\" fontSize=\"large\" />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default AddToPlaylistIcon;","import React ,{ useState }from \"react\";\r\nimport { getUpcomingMovies } from \"../api/tmdb-api\";\r\nimport PageTemplate from '../components/templateMovieListPage';\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport AddToPlaylistIcon from '../components/cardIcons/addToPlaylist'\r\nimport CustomPagination from \"../components/customPagination\";\r\n\r\nconst UpcomingMoviesPage = () => {\r\n  const [page, setPage] = useState(1);\r\n  const {  data, error, isLoading, isError }  = useQuery(['movie',{page}], getUpcomingMovies)\r\n\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }  \r\n  const movies = data.results;\r\n  // Redundant, but necessary to avoid app crashing.\r\n  const favorites = movies.filter(m => m.favorite)\r\n  localStorage.setItem('favorites', JSON.stringify(favorites))\r\n\r\n  return (\r\n    <>\r\n    <PageTemplate\r\n      title='Upcoming Movies'\r\n      movies={movies}\r\n      action={(movie) => {\r\n        return <AddToPlaylistIcon movie={movie} />\r\n      }}\r\n      \r\n    />\r\n    <CustomPagination page={Number(page)} setPage={setPage} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpcomingMoviesPage;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 10H3v2h11v-2zm0-4H3v2h11V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM3 16h7v-2H3v2z\"\n}), 'PlaylistAdd');\n\nexports.default = _default;"],"names":["getMovies","queryKey","page","fetch","process","then","response","ok","Error","json","message","catch","error","getPopularPeople","getPerson","args","id","getPersonImages","getUpcomingMovies","getMovie","getTopRatedMovies","getGenres","getMovieImages","getMovieReviews","res","results","setPage","style","position","bottom","zIndex","background","padding","width","showFirstButton","showLastButton","onChange","_e","p","count","color","size","CircularIndeterminate","sx","display","justifyContent","marginLeft","props","title","navigate","useNavigate","Paper","component","flexWrap","marginBottom","IconButton","onClick","ArrowBack","fontSize","Typography","variant","ArrowForward","formControl","margin","minWidth","backgroundColor","FilterMoviesCard","useQuery","data","isLoading","isError","genres","name","unshift","handleChange","e","type","value","preventDefault","onUserInput","Card","maxWidth","CardContent","Search","TextField","label","titleFilter","target","FormControl","InputLabel","Select","labelId","defaultValue","genreFilter","map","genre","MenuItem","languageFilter","languages","language","CardMedia","height","image","img","MovieCard","movie","action","favorites","useContext","MoviesContext","playlist","find","favorite","CardHeader","avatar","Avatar","Favorite","avatar1","PlaylistAddCheck","poster_path","Grid","container","item","xs","release_date","StarRate","vote_average","CardActions","disableSpacing","to","Button","movies","m","sm","md","lg","xl","useState","nameFilter","setNameFilter","setGenreFilter","setLanguageFilter","genreId","Number","l","includes","original_language","push","displayedMovies","filter","toLowerCase","search","genre_ids","spacing","context","addToPlaylist","PlaylistAdd","localStorage","setItem","JSON","stringify","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}